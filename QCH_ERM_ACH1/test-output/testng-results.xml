<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1864255" started-at="2020-07-20T12:08:00Z" finished-at="2020-07-20T12:39:04Z">
    <groups>
      <group name="Samatha">
        <method signature="QCStore.LOC_ACHDeposit_Return()[pri:12, instance:tests.QCStore@370736d9]" name="LOC_ACHDeposit_Return" class="tests.QCStore"/>
        <method signature="QCStore.LOC_ACHDeposit_Return_Redeposit()[pri:13, instance:tests.QCStore@370736d9]" name="LOC_ACHDeposit_Return_Redeposit" class="tests.QCStore"/>
        <method signature="QCStore.LOC_Payoff_ageLastInst_ACHDeposit()[pri:11, instance:tests.QCStore@370736d9]" name="LOC_Payoff_ageLastInst_ACHDeposit" class="tests.QCStore"/>
      </group> <!-- Samatha -->
    </groups>
    <test name="Test" duration-ms="1864255" started-at="2020-07-20T12:08:00Z" finished-at="2020-07-20T12:39:04Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@370736d9]" name="setup" is-config="true" duration-ms="91" started-at="2020-07-20T12:08:00Z" finished-at="2020-07-20T12:08:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@370736d9]" name="killProcess" is-config="true" duration-ms="2008" started-at="2020-07-20T12:08:00Z" finished-at="2020-07-20T12:08:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="LOC_Payoff_ageLastInst_ACHDeposit()[pri:11, instance:tests.QCStore@370736d9]" name="LOC_Payoff_ageLastInst_ACHDeposit" duration-ms="742482" started-at="2020-07-20T12:08:02Z" finished-at="2020-07-20T12:20:25Z">
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[Modal dialog present: Do you want to ACH Revoke?
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'QTLSYS0-223', ip: '192.168.0.223', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserAttachTimeout: 0, browserName: internet explorer, cssSelectorsEnabled: true, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, handlesAlerts: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.forceCreateProcessApi: false, ie.usePerProcessProxy: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:5035/, javascriptEnabled: true, nativeEvents: true, platform: WINDOWS, platformName: WINDOWS, requireWindowFocus: false, takesScreenshot: true, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 5b65ee5b-eb22-47e0-a8d4-70363188d1c1
*** Element info: {Using=name, value=requestBean.chkName}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: Modal dialog present: Do you want to ACH Revoke?
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'QTLSYS0-223', ip: '192.168.0.223', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserAttachTimeout: 0, browserName: internet explorer, cssSelectorsEnabled: true, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, handlesAlerts: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.forceCreateProcessApi: false, ie.usePerProcessProxy: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:5035/, javascriptEnabled: true, nativeEvents: true, platform: WINDOWS, platformName: WINDOWS, requireWindowFocus: false, takesScreenshot: true, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 5b65ee5b-eb22-47e0-a8d4-70363188d1c1
*** Element info: {Using=name, value=requestBean.chkName}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.createUnhandledAlertException(ErrorHandler.java:195)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:400)
at org.openqa.selenium.By$ByName.findElement(By.java:284)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at tests.QCDepositDropdown.depositDropDown(QCDepositDropdown.java:93)
at tests.QCStore.LOC_Payoff_ageLastInst_ACHDeposit(QCStore.java:773)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LOC_Payoff_ageLastInst_ACHDeposit -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@370736d9]" name="getResult" is-config="true" duration-ms="978" started-at="2020-07-20T12:20:25Z" finished-at="2020-07-20T12:20:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LOC_Payoff_ageLastInst_ACHDeposit status=FAILURE method=QCStore.LOC_Payoff_ageLastInst_ACHDeposit()[pri:11, instance:tests.QCStore@370736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@370736d9]" name="killProcess" is-config="true" duration-ms="2002" started-at="2020-07-20T12:20:26Z" finished-at="2020-07-20T12:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="LOC_ACHDeposit_Return()[pri:12, instance:tests.QCStore@370736d9]" name="LOC_ACHDeposit_Return" duration-ms="520254" started-at="2020-07-20T12:20:28Z" finished-at="2020-07-20T12:29:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LOC_ACHDeposit_Return -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@370736d9]" name="getResult" is-config="true" duration-ms="594" started-at="2020-07-20T12:29:08Z" finished-at="2020-07-20T12:29:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LOC_ACHDeposit_Return status=SUCCESS method=QCStore.LOC_ACHDeposit_Return()[pri:12, instance:tests.QCStore@370736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@370736d9]" name="killProcess" is-config="true" duration-ms="2015" started-at="2020-07-20T12:29:09Z" finished-at="2020-07-20T12:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="LOC_ACHDeposit_Return_Redeposit()[pri:13, instance:tests.QCStore@370736d9]" name="LOC_ACHDeposit_Return_Redeposit" duration-ms="593774" started-at="2020-07-20T12:29:11Z" finished-at="2020-07-20T12:39:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LOC_ACHDeposit_Return_Redeposit -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@370736d9]" name="getResult" is-config="true" duration-ms="32" started-at="2020-07-20T12:39:04Z" finished-at="2020-07-20T12:39:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LOC_ACHDeposit_Return_Redeposit status=SUCCESS method=QCStore.LOC_ACHDeposit_Return_Redeposit()[pri:13, instance:tests.QCStore@370736d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.QCStore -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
